import { add } from "date-fns";

function fromToday(numDays, withTime = false) {
  const date = add(new Date(), { days: numDays });
  if (!withTime) date.setUTCHours(0, 0, 0, 0);
  return date.toISOString().slice(0, -1);
}

export const appointments = [
  {
    created_at: fromToday(-20, true),
    // condition: "mild",
    startDate: fromToday(0),
    endDate: fromToday(5),
    isPaid: true,
    doctorId: 2,
    patientId: 3,
  },
  {
    created_at: fromToday(-19, true),
    // condition: "moderate",
    startDate: fromToday(1),
    endDate: fromToday(8),
    isPaid: false,
    doctorId: 4,
    patientId: 5,
  },
  {
    created_at: fromToday(-18, true),
    // condition: "severe",
    startDate: fromToday(2),
    endDate: fromToday(9),
    isPaid: true,
    doctorId: 6,
    patientId: 7,
  },
  {
    created_at: fromToday(-17, true),
    // condition: "mild",
    startDate: fromToday(3),
    endDate: fromToday(6),
    isPaid: false,
    doctorId: 8,
    patientId: 9,
  },
  {
    created_at: fromToday(-16, true),
    // condition: "moderate",
    startDate: fromToday(4),
    endDate: fromToday(11),
    isPaid: true,
    doctorId: 10,
    patientId: 11,
  },
  {
    created_at: fromToday(-15, true),
    // condition: "severe",
    startDate: fromToday(5),
    endDate: fromToday(12),
    isPaid: false,
    doctorId: 12,
    patientId: 13,
  },
  {
    created_at: fromToday(-14, true),
    // condition: "mild",
    startDate: fromToday(6),
    endDate: fromToday(13),
    isPaid: true,
    doctorId: 14,
    patientId: 15,
  },
  {
    created_at: fromToday(-13, true),
    // condition: "moderate",
    startDate: fromToday(7),
    endDate: fromToday(14),
    isPaid: false,
    doctorId: 1,
    patientId: 1,
  },
  {
    created_at: fromToday(-12, true),
    // condition: "severe",
    startDate: fromToday(8),
    endDate: fromToday(15),
    isPaid: true,
    doctorId: 3,
    patientId: 2,
  },
  {
    created_at: fromToday(-11, true),
    // condition: "mild",
    startDate: fromToday(9),
    endDate: fromToday(16),
    isPaid: false,
    doctorId: 5,
    patientId: 4,
  },
  {
    created_at: fromToday(-10, true),
    // condition: "moderate",
    startDate: fromToday(10),
    endDate: fromToday(17),
    isPaid: true,
    doctorId: 7,
    patientId: 6,
  },
  {
    created_at: fromToday(-9, true),
    // condition: "severe",
    startDate: fromToday(11),
    endDate: fromToday(18),
    isPaid: false,
    doctorId: 9,
    patientId: 8,
  },
  {
    created_at: fromToday(-8, true),
    // condition: "mild",
    startDate: fromToday(12),
    endDate: fromToday(19),
    isPaid: true,
    doctorId: 11,
    patientId: 10,
  },
  {
    created_at: fromToday(-7, true),
    // condition: "moderate",
    startDate: fromToday(13),
    endDate: fromToday(20),
    isPaid: false,
    doctorId: 13,
    patientId: 12,
  },
  {
    created_at: fromToday(-6, true),
    // condition: "severe",
    startDate: fromToday(14),
    endDate: fromToday(21),
    isPaid: true,
    doctorId: 4,
    patientId: 14,
  },
  {
    created_at: fromToday(-5, true),
    // condition: "mild",
    startDate: fromToday(15),
    endDate: fromToday(22),
    isPaid: false,
    doctorId: 4,
    patientId: 16,
  },
  {
    created_at: fromToday(-4, true),
    // condition: "moderate",
    startDate: fromToday(16),
    endDate: fromToday(23),
    isPaid: true,
    doctorId: 10,
    patientId: 17,
  },
  {
    created_at: fromToday(-3, true),
    // condition: "severe",
    startDate: fromToday(17),
    endDate: fromToday(24),
    isPaid: false,
    doctorId: 13,
    patientId: 18,
  },
  {
    created_at: fromToday(-2, true),
    // condition: "mild",
    startDate: fromToday(18),
    endDate: fromToday(25),
    isPaid: true,
    doctorId: 15,
    patientId: 19,
  },
  {
    created_at: fromToday(-1, true),
    // condition: "moderate",
    startDate: fromToday(19),
    endDate: fromToday(26),
    isPaid: false,
    doctorId: 15,
    patientId: 20,
  },
];
